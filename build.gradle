buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-info-plugin:2.2.+'
    }
}

plugins {
    id 'nebula.netflixoss' version '2.2.9'
}

ext {
    githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name
    hadoopVersion = project.hasProperty('hadoopVersion') ? hadoopVersion : '2.4.1'
}

subprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'java'
    apply plugin: 'info'

    configurations {
        includeInJar
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    tasks.withType(JavaCompile) {
        sourceCompatibility = '1.7'
        targetCompatibility = '1.7'
    }
    group = "com.netflix.${githubProjectName}" // TEMPLATE: Set to organization of project

    dependencies {
        testCompile 'org.testng:testng:6.1.1'
        testCompile 'org.easymock:easymock:3.0'
    }

    test {
        useTestNG()
    }
}

project(':aegisthus-distcp') {
    configurations.includeInJar {
        transitive = false
    }
    configurations.compile.extendsFrom(configurations.includeInJar)

    dependencies {
        includeInJar project(':aegisthus-core')
        includeInJar 'org.xerial.snappy:snappy-java:1.0.4.1'
    }
    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

project(':aegisthus-core') {
    configurations.compile.extendsFrom(configurations.includeInJar)

    dependencies {
        compile 'org.apache.pig:pig:0.11.1'
        compile 'org.slf4j:slf4j-api:1.7.7'
        compile 'org.slf4j:slf4j-log4j12:1.7.7'
        includeInJar 'com.fasterxml.jackson.core:jackson-core:2.4.3'
        includeInJar 'com.google.guava:guava:15.0'
    }

    includeHadoopLibs(project)
    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

project(':aegisthus-hadoop') {
    configurations.includeInJar {
        transitive = false
    }
    configurations.compile.extendsFrom(configurations.includeInJar)

    dependencies {
        includeInJar project(':aegisthus-core')
        includeInJar project(':aegisthus-distcp')
        compile 'org.apache.pig:pig:0.11.1'
        includeInJar 'com.netflix.rxjava:rxjava-core:0.19.6'
        includeInJar 'org.apache.cassandra:cassandra-all:2.0.10'

        compile 'org.apache.avro:avro:1.7.4'
        includeInJar 'org.apache.avro:avro-mapred:1.7.4:hadoop2'

        // cassandra selected transitive deps
        includeInJar 'org.apache.thrift:libthrift:0.9.1'
        includeInJar 'org.xerial.snappy:snappy-java:1.0.4.1'
        includeInJar 'net.jpountz.lz4:lz4:1.2.0'
        includeInJar 'org.apache.commons:commons-lang3:3.1'
        includeInJar 'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.3'
        includeInJar 'org.antlr:antlr-runtime:3.2'
        includeInJar 'com.github.stephenc:jamm:0.2.5'
    }

    includeHadoopLibs(project)

    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

project(':aegisthus-pig') {
    configurations.compile.extendsFrom(configurations.includeInJar)

    dependencies {
        includeInJar project(':aegisthus-hadoop')
        compile 'org.apache.pig:pig:0.11.1'
        compile 'joda-time:joda-time:1.6'
    }

    includeHadoopLibs(project)

    jar {
        from { configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}

project(':aegisthus-test') {
    apply plugin: 'groovy'
    dependencies {
        testCompile project(':aegisthus-pig')
        testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
        testCompile 'org.apache.hadoop:hadoop-minicluster:2.4.1'
    }

    license {
        exclude '**/*.db'
        exclude '**/*.txt'
        exclude '**/*.sha1'
    }
}

// include correct hadoop libraries for version
def includeHadoopLibs(project) {
    if (rootProject.hadoopVersion.startsWith('1')) {
        project.dependencies {
            compile "org.apache.hadoop:hadoop-core:$hadoopVersion"
        }
    } else {
        project.dependencies {
            compile "org.apache.hadoop:hadoop-common:$hadoopVersion"
            compile "org.apache.hadoop:hadoop-hdfs:$hadoopVersion"
            compile "org.apache.hadoop:hadoop-mapreduce-client-core:$hadoopVersion"
            compile "org.apache.hadoop:hadoop-mapreduce-client-jobclient:$hadoopVersion"
        }
    }
}
